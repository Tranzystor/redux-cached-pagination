{"version":3,"sources":["../src/pagination-lib/paginationReducer.js"],"names":["paginate","types","fetching","success","failure","refreshing","removeCache","removeSearchResult","state","action","stateToUpdate","set","filtersKey","Date","now","type","page","isFetching","isRefreshing","isSuccess","isFailed","lastUpdateTime","elements","withElemsCount","merge","elementsCount","response","totalElements","delete","entities","actionTypes","paginationParams","actionType","removeCacheActionType","updatePaginationParams","searchParamsReducer","searchParamsActionType","initState","searchParams","currentPageReducer","setCurrentPageNumberActionType","pageNumber"],"mappings":"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","file":"paginationReducer.js","sourcesContent":["import dotProp from 'dot-prop-immutable';\r\n\r\nexport const paginate = (types) => {\r\n    const { fetching, success, failure, refreshing, removeCache, removeSearchResult } = types;\r\n\r\n    return (state = {}, action) => {\r\n        const stateToUpdate = dotProp.set(state, `${action.filtersKey}.lastUpdateTime`, Date.now());\r\n        switch (action.type) {\r\n            case fetching:\r\n                return dotProp.set(stateToUpdate, `${action.filtersKey}.pages.${action.page}`,\r\n                    {\r\n                        isFetching: true,\r\n                        isRefreshing: false,\r\n                        isSuccess: false,\r\n                        isFailed: false,\r\n                        lastUpdateTime: Date.now(),\r\n                        elements: []\r\n                    }\r\n                );\r\n            case success:\r\n                const withElemsCount = dotProp.merge(stateToUpdate, `${action.filtersKey}`,\r\n                    {\r\n                        elementsCount: action.response.totalElements\r\n                    });\r\n                return dotProp.set(withElemsCount, `${action.filtersKey}.pages.${action.page}`,\r\n                    {\r\n                        isFetching: false,\r\n                        isRefreshing: false,\r\n                        isSuccess: true,\r\n                        isFailed: false,\r\n                        lastUpdateTime: Date.now(),\r\n                        elements: action.response.elements\r\n                    }\r\n                );\r\n            case failure:\r\n                return dotProp.set(stateToUpdate, `${action.filtersKey}.pages.${action.page}`,\r\n                    {\r\n                        isFetching: false,\r\n                        isRefreshing: false,\r\n                        isSuccess: false,\r\n                        isFailed: true,\r\n                        lastUpdateTime: Date.now(),\r\n                        elements: []\r\n                    }\r\n                );\r\n            case removeCache:\r\n                return {};\r\n            case refreshing:\r\n                return dotProp.merge(stateToUpdate, `${action.filtersKey}.pages.${action.page}`,\r\n                    {\r\n                        isFetching: false,\r\n                        isRefreshing: true,\r\n                        isSuccess: false,\r\n                        isFailed: false,\r\n                        lastUpdateTime: Date.now()\r\n                    });\r\n            case removeSearchResult:\r\n                return dotProp.delete(stateToUpdate, `${action.filtersKey}`);\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const entities = (actionTypes) => {\r\n    const { success, removeCache } = actionTypes;\r\n    return (state = {}, action) => {\r\n        switch (action.type) {\r\n            case success:\r\n                return {\r\n                    ...state,\r\n                    ...action.response.entities\r\n                }\r\n            case removeCache:\r\n                return {};\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const paginationParams = (actionType, removeCacheActionType) => {\r\n    const updatePaginationParams = actionType;\r\n    const removeCache = removeCacheActionType;\r\n    return (state = {}, action) => {\r\n        switch (action.type) {\r\n            case updatePaginationParams:\r\n                return { ...state, ...action.paginationParams };\r\n            case removeCache:\r\n                return {};\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const searchParamsReducer = (searchParamsActionType, initState) => {\r\n    return (state = initState, action) => {\r\n        switch (action.type) {\r\n            case searchParamsActionType:\r\n                return { ...state, ...action.searchParams };\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const currentPageReducer = (setCurrentPageNumberActionType) => {\r\n    return (state = { pageNumber: 1 }, action) => {\r\n        switch (action.type) {\r\n            case setCurrentPageNumberActionType:\r\n                return {\r\n                    pageNumber: action.pageNumber\r\n                };\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n}"]}