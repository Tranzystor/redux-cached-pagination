{"version":3,"sources":["../src/pagination-lib/utils.js"],"names":["buildFetchingApiActionNames","fetching","actionPrefix","success","failure","removeCache","removeSearchResult","refreshing","updatePaginationParams","updateScrollToIndex","updateSearchParams","setCurrentPageNumber","buildStoreName","storePrefix","buildUniqueKey","obj","console","error","result","Object","entries","sort","forEach","key","value","concat","convertTotalItemIndexToPageNum","elementsPerPage","totalIndex","Math","floor"],"mappings":";;;;;;;;AAAO,IAAMA,oEAA8B,SAA9BA,2BAA8B,eAAgB;AACvD,WAAO;AACHC,kBAAaC,YAAb,cADG;AAEHC,iBAAYD,YAAZ,aAFG;AAGHE,iBAAYF,YAAZ,aAHG;AAIHG,qBAAgBH,YAAhB,oBAJG;AAKHI,4BAAuBJ,YAAvB,0BALG;AAMHK,oBAAeL,YAAf,qBANG;AAOHM,gCAA2BN,YAA3B,8BAPG;AAQHO,6BAAwBP,YAAxB,4BARG,EAQ2D;AAC9DQ,4BAAuBR,YAAvB,0BATG;AAUHS,8BAAyBT,YAAzB;AAVG,KAAP;AAYH,CAbM;;AAeA,IAAMU,0CAAiB,SAAjBA,cAAiB,cAAe;AACzC,WAAUC,WAAV;AACH,CAFM;;AAIA,IAAMC,0CAAiB,SAAjBA,cAAiB,CAACC,GAAD,EAAS;AACnC,QAAI,CAACA,GAAL,EAAU;AACNC,gBAAQC,KAAR,CAAc,0BAAd;AACH;;AAED,QAAIC,SAAS,EAAb;AACAC,WAAOC,OAAP,CAAeL,GAAf,EAAoBM,IAApB,GAA2BC,OAA3B,CACI,gBAAkB;AAAA;AAAA,YAAhBC,GAAgB;AAAA,YAAXC,KAAW;;AACdN,iBAASA,OAAOO,MAAP,CAAcF,GAAd,EAAmB,GAAnB,EAAwBC,KAAxB,EAA+B,GAA/B,CAAT;AACH,KAHL;AAKA,WAAON,MAAP;AACH,CAZM;;AAcA,IAAMQ,0EAAiC,SAAjCA,8BAAiC,CAACC,eAAD;AAAA,WAAqB,UAACC,UAAD,EAAgB;AAC/E,eAAOC,KAAKC,KAAL,CAAWF,aAAaD,eAAxB,IAA2C,CAAlD;AACH,KAF6C;AAAA,CAAvC","file":"utils.js","sourcesContent":["export const buildFetchingApiActionNames = actionPrefix => {\r\n    return {\r\n        fetching: `${actionPrefix}_FETCHING`,\r\n        success: `${actionPrefix}_SUCCESS`,\r\n        failure: `${actionPrefix}_FAILURE`,\r\n        removeCache: `${actionPrefix}_SOURCE_CHANGED`,\r\n        removeSearchResult: `${actionPrefix}_REMOVE_SEARCH_RESULT`,\r\n        refreshing: `${actionPrefix}_REFRESHING_PAGE`,\r\n        updatePaginationParams: `${actionPrefix}_UPDATE_PAGINATION_PARAMS`,\r\n        updateScrollToIndex: `${actionPrefix}_UPDATE_SCROLL_TO_INDEX`,//obsolete\r\n        updateSearchParams: `${actionPrefix}_UPDATE_SEARCH_PARAMS`,\r\n        setCurrentPageNumber: `${actionPrefix}_SET_CURRENT_PAGE`\r\n    }\r\n}\r\n\r\nexport const buildStoreName = storePrefix => {\r\n    return `${storePrefix}_store`;\r\n}\r\n\r\nexport const buildUniqueKey = (obj) => {\r\n    if (!obj) {\r\n        console.error('input has to be defined!');\r\n    }\r\n\r\n    let result = '';\r\n    Object.entries(obj).sort().forEach(\r\n        ([key, value]) => {\r\n            result = result.concat(key, '_', value, '_');\r\n        }\r\n    );\r\n    return result;\r\n}\r\n\r\nexport const convertTotalItemIndexToPageNum = (elementsPerPage) => (totalIndex) => {\r\n    return Math.floor(totalIndex / elementsPerPage) + 1;\r\n}\r\n"]}